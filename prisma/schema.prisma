// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  image     String?
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt


}

model Product {
  id                  Int       @id @default(autoincrement())
  userId              String    
  image               String?
  title               String
  description         String
  price               String
  salePrice           String?
  category            String
  BestSellingProducts String?
  count               String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt

}

model Favorite {
  id                  Int       @id @default(autoincrement())
  userId              String    
  image               String
  title               String
  description         String?
  price               String
  salePrice           String?
  category            String
  BestSellingProducts String?
  count               String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt

}

model Basket {
  id         Int          @id @default(autoincrement())
  userId     String       
  totalPrice Float   @default(0)
  totalCount String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt

}

model ItemBasket {
  id                  Int       @id @default(autoincrement())
  basketId            Int
  image               String
  title               String
  description         String?
  price               String
  salePrice           String?
  category            String
  BestSellingProducts String?
  count               String
  quantity            String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime? @updatedAt

}

model Timer {
  id        Int       @id @default(autoincrement())
  name      String
  time      DateTime  @default(now())
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}
